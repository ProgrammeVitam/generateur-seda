<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.gouv.vitam.generator</groupId>
	<artifactId>parent</artifactId>
	<version>1.4.1</version>
	<packaging>pom</packaging>
	<name>generator-parent</name>
	<description>Generateur de SIP au format SEDA 2.1</description>

	<organization>
		<name>Vitam</name>
	</organization>

	<prerequisites>
		<maven>3.3.9</maven>
	</prerequisites>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Modules -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<modules>
		<module>scanner</module>
		<module>scheduler</module>
		<module>seda</module>
		<module>testing-modules</module>
		<module>generator-dist</module>
	</modules>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Définition des SCM, ciManagement -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<!-- Définition de l'url du gestionnaire de source à utiliser -->
	<scm>
		<connection>scm:git:https://gitlab.dev.programmevitam.fr/vitam/generateur-seda.git</connection>
		<developerConnection>scm:git:https://gitlab.dev.programmevitam.fr/vitam/generateur-seda.git</developerConnection>
		<url>https://gitlab.dev.programmevitam.fr/vitam/generateur-seda.git</url>
		<tag>HEAD</tag>
	</scm>

	<!-- Définition de l'url de l'intégration continue du projet -->
	<ciManagement>
		<system>jenkins</system>
		<url>https://jenkins.dev.programmevitam.fr/jenkins/</url>
	</ciManagement>


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Définition des properties -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<properties>
		<!-- Global Properties -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Project Version -->
		<vitam.common.version>1.7.0</vitam.common.version>


		<!-- Build environment Properties -->
		<project.scm.id>vitam-gitlab</project.scm.id>

		<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
		<!-- Sonar properties -->
		<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<!-- <sonar.profile>MonPetitProfil</sonar.profile> -->
		<!-- <sonar.branch>1.0</sonar.branch> -->
		<!-- <sonar.jacoco.reportPath>${project.build.directory}/jacoco-unit.exec</sonar.jacoco.reportPath> -->
		<!-- <sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath> -->
		<!-- <sonar.jacoco.includes></sonar.jacoco.includes> -->
		<!-- <sonar.jacoco.excludes></sonar.jacoco.excludes> -->

		<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
		<!-- Dependencies versions -->
		<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
		<jacoco-maven-plugin.version>0.7.6.201602180812</jacoco-maven-plugin.version>
		<slf4j.version>1.7.25</slf4j.version>
		<logback.version>1.2.3</logback.version>
		<jackson.version>2.8.7</jackson.version>
		<log4j2.version>2.9.1</log4j2.version>
		<commons-logging.version>1.2</commons-logging.version>
		<easymock.version>3.4</easymock.version>
		<assertj.version>2.4.0</assertj.version>
		<rest-assured.version>2.9.0</rest-assured.version>
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<httpclient.version>4.5.2</httpclient.version>
		<powermock.version>1.6.5</powermock.version>
		<junit.system-rules.version>1.16.1</junit.system-rules.version>
		<stax-api.version>3.1.2</stax-api.version>
		<woodstox.version>4.4.1</woodstox.version>
		<commons-csv.version>1.4</commons-csv.version>
		<sonar.exclusions>file:**/generated-sources/**</sonar.exclusions>
	</properties>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Définition des profils de build -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<profiles>
		<profile>
			<!-- Profile used to build and package the documentation -->
			<id>doc</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<modules>
				<module>doc</module>
			</modules>
		</profile>

		<profile>
			<!-- Profile to use for all Vitam internal developers -->
			<id>vitam</id>

			<!-- Dépôts Maven privés -->
			<distributionManagement>
				<repository>
					<id>releases</id>
					<url>${env.SERVICE_NEXUS_URL}/repository/maven-releases/</url>
				</repository>
				<snapshotRepository>
					<id>snapshots</id>
					<url>${env.SERVICE_NEXUS_URL}/repository/maven-snapshots/</url>
				</snapshotRepository>
			</distributionManagement>

			<repositories>
				<repository>
					<id>vitam</id>
					<url>${env.SERVICE_NEXUS_URL}/repository/maven-public/</url>
				</repository>
			</repositories>

			<!-- Maven plugins repositories -->
			<pluginRepositories>
				<pluginRepository>
					<id>vitam</id>
					<url>${env.SERVICE_NEXUS_URL}/repository/maven-public/</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>

		<profile>
			<!-- Profile to use for upstream release & development -->
			<id>bintray</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<repositories>
                <repository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <id>bintray-programmevitam-vitam-maven-release</id>
                    <name>bintray</name>
                    <url>http://dl.bintray.com/programmevitam/vitam-maven-release</url>
                </repository>
            </repositories>

			<distributionManagement>
				<repository>
					<id>bintray-releases</id>
					<name>bintray-generateur-seda-release</name>
					<url>https://api.bintray.com/maven/programmevitam/vitam-maven-release/generateur-seda/</url>
				</repository>
			</distributionManagement>

			<build>
				<plugins>
					<!-- Add source jar generation -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Add javadoc jars generation -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Définition des plugins -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<build>
		<pluginManagement>
			<plugins>
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Main Maven plugins, see http://maven.apache.org/plugins/index.html -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Core plugins : Plugins corresponding to default core phases (ie.
					clean, compile). They may have muliple goals as well. -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<plugin>
					<!-- Clean up after the build. -->
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<!-- Compiles Java sources. -->
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<!-- Deploy the built artifact to the remote repository. -->
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<!-- Run the Junit integration tests in an isolated classloader. -->
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.19.1</version>
				</plugin>
				<plugin>
					<!-- Install the built artifact into the local repository. -->
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<!-- Copy the resources to the output directory for including in the
						JAR. -->
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<!-- Generate a site for the current project. -->
					<artifactId>maven-site-plugin</artifactId>
					<version>3.5</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>jacoco-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<propertyName>coverageAgent</propertyName>
							</configuration>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- Run the Junit unit tests in an isolated classloader. -->
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<forkMode>always</forkMode>
						<argLine>-Xmx2048m ${coverageAgent}</argLine>
					</configuration>
				</plugin>
				<plugin>
					<!-- Useful for integration tests - verifies the existence of certain
						conditions. -->
					<artifactId>maven-verifier-plugin</artifactId>
					<version>1.1</version>
				</plugin>

				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Packaging types / tools : These plugins relate to packaging respective
					artifact types. -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<plugin>
					<!-- Build a JAR from the current project. -->
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<archive>
							<manifestEntries>
								<Maven-groupId>${project.groupId}</Maven-groupId>
								<Maven-artefactId>${project.artifactId}</Maven-artefactId>
								<Maven-version>${project.version}</Maven-version>
								<Maven-build-timestamp>${maven.build.timestamp}</Maven-build-timestamp>
								<!-- <Sealed>true</Sealed> -->
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>

				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Reporting plugins : Plugins which generate reports, are configured
					as reports in the POM and run under the site generation lifecycle. -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<plugin>
					<!-- The Javadoc Plugin uses the Javadoc tool to generate javadocs for
						the specified project. -->
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.3</version>
					<configuration>
						<source>${java.version}</source>
					</configuration>
				</plugin>
				<plugin>
					<!-- The Surefire Report Plugin parses the generated TEST-*.xml files
						under ${basedir}/target/surefire-reports and renders them to DOXIA which
						creates the web interface version of the test results. -->
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.19.1</version>
				</plugin>

				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Tools : These are miscellaneous tools available through Maven by
					default. -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<plugin>
					<!-- Build an assembly (distribution) of sources and/or binaries. -->
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<!-- Dependency manipulation (copy, unpack) and analysis. -->
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
				</plugin>
				<plugin>
					<!-- Environmental constraint checking (Maven Version, JDK etc), User
						Custom Rule Execution. -->
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
				</plugin>
				<plugin>
					<!-- Get information about the working environment for the project. -->
					<artifactId>maven-help-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<!-- SCM plugin ; set as using jgit for git (essentially for the release plugin) -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.9.4</version>
					<configuration>
						<providerImplementations>
							<git>jgit</git>
						</providerImplementations>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-jgit</artifactId>
							<version>1.9.4</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<!-- Release the current project - updating the POM and tagging in the SCM. -->
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<!-- Ask only once per SNAPSHOT artifact -->
						<!--<forceUniqueArtifactVersion>true</forceUniqueArtifactVersion> -->
						<!-- Don't ask if you want to resolve snapshots, do it -->
						<!-- <alwaysResolveSnapshots>true</alwaysResolveSnapshots> -->
						<!-- Don't ask which dependencies to resolve ( 0:All 1:Project Dependencies
							2:Plugins 3:Reports 4:Extensions ) -->
						<!--<alwaysResolveDependencyType>1</alwaysResolveDependencyType> -->
						<providerImplementations>
							<git>jgit</git>
						</providerImplementations>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-jgit</artifactId>
							<version>1.9.4</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<!-- Build a JAR of sources for use in IDEs and distribution to the
						repository. -->
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<!-- Maven/Sonarqube integration -->
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<!-- Get git versions information -->
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.2.1</version>
					<executions>
						<execution>
							<id>get-the-git-infos</id>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>

					<configuration>
						<!--<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>-->
						<dateFormat>yyyy-MM-dd'T'HH:mm:ssX</dateFormat>
						<!--<injectAllReactorProjects>true</injectAllReactorProjects>
                        <runOnlyOnce>true</runOnlyOnce>-->
						<!--<failOnNoGitDirectory>false</failOnNoGitDirectory>-->
						<!-- <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo> -->
						<!--<useNativeGit>false</useNativeGit>-->
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>fr.gouv.vitam</groupId>
				<artifactId>common-public</artifactId>
				<version>${vitam.common.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-xml</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<!-- ########################## Logger ########################## -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-access</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>

			<!-- ####################### Extra Logger ####################### -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.flipkart.zjsonpatch</groupId>
				<artifactId>zjsonpatch</artifactId>
				<version>${zjsonpatch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-to-slf4j</artifactId>
				<version>${log4j2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.woodstox</groupId>
				<artifactId>stax2-api</artifactId>
				<version>${stax-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.woodstox</groupId>
				<artifactId>woodstox-core-asl</artifactId>
				<version>4.4.1</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>19.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-csv</artifactId>
				<version>${commons-csv.version}</version>
			</dependency>

			<!-- ####################### Tests ####################### -->

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.github.stefanbirkner</groupId>
				<artifactId>system-rules</artifactId>
				<version>${junit.system-rules.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>common-public</artifactId>
			<version>${vitam.common.version}</version>
		</dependency>
	</dependencies>
</project>
